{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "STD23042 - TD1",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/HEIVANINAH/library/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://localhost.std23042.com"
  } ],
  "paths" : {
    "/books" : {
      "get" : {
        "tags" : [ "Books" ],
        "summary" : "Get all books",
        "operationId" : "getBooks",
        "parameters" : [ {
          "name" : "bookName",
          "in" : "query",
          "description" : "Filter books by name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "releaseDateFrom",
          "in" : "query",
          "description" : "Filter books released after this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-01-01"
          }
        }, {
          "name" : "releaseDateTo",
          "in" : "query",
          "description" : "Filter books released before this date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-12-31"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all books",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Books" ],
        "summary" : "Update an existing book",
        "operationId" : "updateBook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Book"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Book updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Books" ],
        "summary" : "Create a new book",
        "operationId" : "createBook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Book"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Book created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}" : {
      "delete" : {
        "tags" : [ "Books" ],
        "summary" : "Delete a book",
        "operationId" : "deleteBook",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Book deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/authors" : {
      "get" : {
        "tags" : [ "Authors" ],
        "summary" : "Get all Authors",
        "operationId" : "getAuthors",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Filter authors by name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Authors" ],
        "summary" : "Update an existing author",
        "operationId" : "updateAuthor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Author"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Author updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Author"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Authors" ],
        "summary" : "Create a new author",
        "operationId" : "createAuthor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Author"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Author created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Author"
                }
              }
            }
          }
        }
      }
    },
    "/authors/{id}" : {
      "delete" : {
        "tags" : [ "Authors" ],
        "summary" : "Delete an author",
        "operationId" : "deleteAuthor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Author deleted successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Author"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Book" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "123e4567-e89b-12d3-a456-426614174000"
          },
          "bookName" : {
            "type" : "string",
            "example" : "The Great Gatsby"
          },
          "author" : {
            "type" : "string",
            "example" : "F. Scott Fitzgerald"
          },
          "pageNumbers" : {
            "type" : "integer",
            "example" : 180
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "1925-04-10"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          }
        }
      },
      "Topic" : {
        "type" : "string",
        "enum" : [ "ROMANCE", "COMEDY", "OTHER" ]
      },
      "Author" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "471eae60-abba-4732-b2a0-2e2b4d04cea1"
          },
          "name" : {
            "type" : "string",
            "example" : "Lucas Clavel"
          },
          "sex" : {
            "$ref" : "#/components/schemas/Sex"
          }
        }
      },
      "Sex" : {
        "type" : "string",
        "enum" : [ "M", "F" ]
      }
    }
  }
}