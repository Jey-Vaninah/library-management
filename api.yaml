openapi: 3.1.0
info:
  title: STD23042 - TD1
  version: 1.0.0
servers:
  - url: https://localhost.std23042.com
paths:
  /authors:
    get:
      tags:
        - Authors
      summary: Get all Authors
      operationId: getAuthors
      parameters:
      - name: name 
        in: query
        description: Filter authors by name
        required: false
        schema:
          type: string
      responses:
        '200':
          description: List of all authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
    post:
      tags:
        - Authors
      summary: Create a new author
      operationId: createAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        '201':
          description: Author created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
    put:
      tags:
        - Authors
      summary: Update an existing author
      operationId: updateAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        '200':
          description: Author updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
  /authors/{id}:
    delete:
      tags:
        - Authors
      summary: Delete an author
      operationId: deleteAuthor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Author deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 471eae60-abba-4732-b2a0-2e2b4d04cea1
        name:
          type: string
          example: Lucas Clavel
        sex:
          $ref: '#/components/schemas/Sex'
    Sex:
      type: string
      enum:
        - M
        - F